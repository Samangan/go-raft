FROM golang:alpine as builder

ENV GO111MODULE=on \
    CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64

# Move to working directory /build
WORKDIR /build

# Copy and download dependency using go mod
COPY go.mod .
#COPY go.sum .
RUN go mod download

# Copy the code into the container
COPY . .

# Build the application

# TODO: build with `-race` enabled
#       Apparently this works now: https://github.com/golang/go/issues/14481

RUN go build -o examples/main examples/main.go

WORKDIR /app

# Copy binary from build to main folder
RUN chmod +x /build/examples/main
RUN cp /build/examples/main .

# Build a small image
FROM scratch

COPY --from=builder /app/main /

# Command to run
ENTRYPOINT ["/main"]
